name: Random
env:
  DOCKER_IMAGE: wyrihaximusnet/default-backend
  DOCKER_IMAGE_REGISTRIES_SECRET_MAPPING: '{"ghcr.io":"GHCR_TOKEN","docker.io":"HUB_PASSCODE"}'
on:
  schedule:
    - cron:  '0 * * * *'
jobs:
  registry-matrix:
    name: Extract registries from registry secret mapping
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.registry-matrix.outputs.registry }}
    steps:
      - uses: actions/checkout@v1
      - id: registry-matrix
        name: Extract registries from registry secret mapping
        run: |
          echo "::set-output name=registry::$(printenv DOCKER_IMAGE_REGISTRIES_SECRET_MAPPING | jq -c 'keys')"
  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Lint Dockerfile
        uses: docker://hadolint/hadolint:latest-debian
        with:
          entrypoint: hadolint
          args: ./random/Dockerfile
  build-docker-image:
    needs:
      - lint-dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: echo "::set-output name=image::$(ls ./images/ | shuf -n 1)"
        id: image
      - run: sed -i "s/random/${IMAGE}/g" ./random/Dockerfile
        env:
          IMAGE: ${{ steps.image.outputs.image }}
      - run: cat ./random/Dockerfile
      - run: docker image build --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` -t "${DOCKER_IMAGE}:random" --no-cache --build-arg VERSION=$TAG_VERSION ./random/
      - run: mkdir ./docker-image
      - run: docker save "${DOCKER_IMAGE}:random" -o ./docker-image/docker_image.tar
      - uses: actions/upload-artifact@master
        with:
          name: docker-image-random
          path: ./docker-image
  push-image:
    name: Push to ${{ matrix.registry }}
    needs:
      - build-docker-image
      - registry-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        registry: ${{ fromJson(needs.registry-matrix.outputs.registry) }}
    steps:
      - uses: actions/download-artifact@master
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
        with:
          name: docker-image-random
          path: ./docker-image
      - run: docker load --input ./docker-image/docker_image.tar
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
      - run: rm -Rf ./docker-image/
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
      - name: Login to ${{ matrix.registry }}
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.HUB_PASSCODE }}" | \
          docker login ${{ matrix.registry }} \
            --username "${{ secrets.HUB_USERNAME }}" \
            --password-stdin
        env:
          DOCKER_USER: ${{ secrets.HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets[fromJson(env.DOCKER_IMAGE_REGISTRIES_SECRET_MAPPING)[matrix.registry]] }}
      - name: Docker info
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
        run: docker info
      - name: Echo full tag
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
        run: docker tag ${DOCKER_IMAGE}:random ${{ matrix.registry }}/${DOCKER_IMAGE}:random
      - name: Echo full tag
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
        run: echo -e "${{ matrix.registry }}/${DOCKER_IMAGE}:random"
      - name: Push image to Docker Hub
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/master'
        run: docker push "${{ matrix.registry }}/${DOCKER_IMAGE}:random"
