name: Random
env:
  DOCKER_IMAGE: wyrihaximusnet/default-backend
  DOCKER_IMAGE_REGISTRIES_SECRET_MAPPING: '{"ghcr.io":"GHCR_TOKEN","docker.io":"HUB_PASSCODE"}'
on:
  schedule:
    - cron:  '0 * * * *'
jobs:
  registry-matrix:
    name: Extract registries from registry secret mapping
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.registry-matrix.outputs.registry }}
    steps:
      - uses: actions/checkout@v2
      - id: registry-matrix
        name: Extract registries from registry secret mapping
        run: |
          echo "::set-output name=registry::$(printenv DOCKER_IMAGE_REGISTRIES_SECRET_MAPPING | jq -c 'keys')"
  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint Dockerfile
        uses: docker://hadolint/hadolint:latest-debian
        with:
          entrypoint: hadolint
          args: ./random/Dockerfile
  build-docker-image:
    needs:
      - lint-dockerfile
      - registry-matrix
    strategy:
      matrix:
        registry: ${{ fromJson(needs.registry-matrix.outputs.registry) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=image::$(ls ./images/ | shuf -n 1)"
        id: image
      - run: sed -i "s/random/${IMAGE}/g" ./random/Dockerfile
        env:
          IMAGE: ${{ steps.image.outputs.image }}
      - run: cat ./random/Dockerfile
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Login to ${{ matrix.registry }}
        run: |
          docker login ${{ matrix.registry }} --username $DOCKER_USER --password $DOCKER_PASSWORD
        env:
          DOCKER_USER: ${{ secrets.HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets[fromJson(env.DOCKER_IMAGE_REGISTRIES_SECRET_MAPPING)[matrix.registry]] }}
      - run: docker buildx build --platform "linux/amd64,linux/arm64,linux/arm/v7" --push --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` -t "${{ matrix.registry }}/${DOCKER_IMAGE}:random" --no-cache --build-arg VERSION=$TAG_VERSION ./random/
